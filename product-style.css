/* ===== PRODUCT CONTAINERS (Horizontal Scroll Only) ===== */
.scroll-container {
  display: flex;
  flex-wrap: nowrap;        /* Keep cards in a single row */
  overflow-x: auto;         /* Horizontal scroll */
  overflow-y: hidden;       /* Prevent vertical scroll inside container */
  padding: 1rem;
  gap: 1.5rem;
  scroll-behavior: smooth;
  border: 1px solid #ccc;
  border-radius: 10px;
  max-width: 100%;
}

/* Hide vertical scrollbar completely */
.scroll-container::-webkit-scrollbar {
  height: 8px;             /* scrollbar height for horizontal scroll */
}
.scroll-container::-webkit-scrollbar-thumb {
  background: #888;
  border-radius: 10px;
}
.scroll-container::-webkit-scrollbar-thumb:hover {
  background: #555;
}

/* Product cards fixed width */
.scroll-container .card {
  flex: 0 0 250px;         /* fixed width */
  max-width: 250px;
  display: flex;
  flex-direction: column;
  border: 1px solid #ddd;
  border-radius: 10px;
  overflow: hidden;
}

/* Card image */
.scroll-container .card img {
  width: 100%;
  height: 200px;
  object-fit: cover;
}

/* Card body & Add to Cart button at bottom */
.scroll-container .card-body {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5rem;
}

.scroll-container .card-body .btn {
  margin-top: auto;        /* push Add to Cart to bottom */
  width: 90%;              /* fixed width for consistency */
  text-align: center;
}

/* Make sure page scrolls normally vertically */
body, html {
  overflow-x: hidden;       /* Prevent page horizontal scroll */
  overflow-y: auto;         /* Normal vertical scroll */
}
/* Ensure the container is aligned and has space */
.Fashion-item {
    /* Assuming you already have display: inline-block or similar here */
    width: 20%; /* Adjust as needed, but make it consistent for all */
    box-sizing: border-box; /* Ensures padding/border are inside the width */
    text-align: center; /* Center the image and button */
}
/* New CSS to contain and align the name and price */
.Fashion-item .product-info-box {
    display: flex; /* Use flexbox to put name and price on one line */
    justify-content: space-between; /* Pushes name to left, price to right */
    padding: 0 10px; /* Add some padding on the sides */
    margin-top: 5px;
    margin-bottom: 5px;
}
.Fashion-item .product-name-text {
    text-align: left; /* Keep name left-aligned */
    margin: 0;
    white-space: normal; /* Allow long names to wrap if needed */
}
.Fashion-item .product-price-text {
    text-align: right; /* Keep price right-aligned */
    margin: 0;
    white-space: nowrap; /* Prevent price from wrapping */
}
/* Override your existing p tag styles for the price tag */
.Fashion-tag {
    /* Ensure default font and weight are consistent */
    font-size: 1em; 
}
/* Ensure the button is centered, which your existing code already does: */
.Fashion-item .text-center {
}
